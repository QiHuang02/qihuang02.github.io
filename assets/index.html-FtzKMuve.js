import{_ as o,c,e as t,o as a}from"./app-08d28jb5.js";const i={};function n(d,e){return a(),c("div",null,e[0]||(e[0]=[t('<p><code>Resource location</code> (资源路径)，也被称为 <code>namespaced IDs</code>， <code>namespaced identifiers</code>， <code>resource identifiers</code>， 或者 <code>namespaced strings</code>，是一种用来声明和制定Minecraft中各种对象的方式，可以无歧义的识别内置的、自定义的对象，避免潜在的冲突。</p><h2 id="definition" tabindex="-1"><a class="header-anchor" href="#definition"><span>定义</span></a></h2><p>一个 <code>Resource location</code> 由两个部分组成:</p><p><code>Resourcelocation</code> = <code>Namespac:Path</code></p><p>一个 <code>Resourcelocation</code> 中仅能包含以下字符:</p><ul><li>数字: <code>0123456789</code></li><li>小写英文字母: <code>abcdefghijklmnopqrstuvwxyz</code></li><li>下划线: <code>_</code></li><li>连字符号: <code>-</code></li><li>点: <code>.</code></li></ul><p>在 <code>Path</code> 部分还可以使用</p><ul><li>正斜杠: <code>/</code></li></ul><h3 id="namespace" tabindex="-1"><a class="header-anchor" href="#namespace"><span><code>Namespace</code> (命名空间)</span></a></h3><ul><li><p><code>Namespace</code>: 命名空间起到了对资源的隔离作用。它可防止潜在的内容冲突或无意中覆盖了相同名称的对象。也就是说命名空间可以有多个，但是必须唯一。</p><p>例如，某一个模组ID为 <code>examplemod</code> 的模组使用 <code>examplemod</code> 作为命名空间，Minecraft 使用 <code>minecraft</code> 作为命名空间。假如在这两个命名空间下有一个同样名为 <code>stick</code> 的物品，但是由于它在两个命名空间中，所以其实是有两个物品存在，也就是 <code>examplemod:item/stick</code> 和 <code>minecraft:item/stick</code>。</p></li></ul><h3 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span><code>Path</code> (路径)</span></a></h3><ul><li><p><code>Path</code>: 路径是指你命名空间内的任何对象。</p><p>例如， <code>minecraft:cow</code> 是指向 <code>minecraft</code> 命名空间中名为 <code>cow</code> 的对象的引用，通常这个位置会被用来从实体注册表中获取实体牛。另一个例子是 <code>examplemod:example_item</code> ，可能被用来从物品注册表中获取你的模组 <code>example_item</code> 。</p></li></ul>',12)]))}const s=o(i,[["render",n]]),p=JSON.parse('{"path":"/notes/minecraft/misc/Resource%20location/","title":"Resource location","lang":"zh-CN","frontmatter":{"title":"Resource location","createTime":"2024/09/30 21:22:20","permalink":"/notes/minecraft/misc/Resource location/","description":"Resource location (资源路径)，也被称为 namespaced IDs， namespaced identifiers， resource identifiers， 或者 namespaced strings，是一种用来声明和制定Minecraft中各种对象的方式，可以无歧义的识别内置的、自定义的对象，避免潜在的冲突。 定义 一个 R...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Resource location\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-02T02:00:31.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://qihuang02.cn/notes/minecraft/misc/Resource%20location/"}],["meta",{"property":"og:site_name","content":"QiHuang02的笔记本"}],["meta",{"property":"og:title","content":"Resource location"}],["meta",{"property":"og:description","content":"Resource location (资源路径)，也被称为 namespaced IDs， namespaced identifiers， resource identifiers， 或者 namespaced strings，是一种用来声明和制定Minecraft中各种对象的方式，可以无歧义的识别内置的、自定义的对象，避免潜在的冲突。 定义 一个 R..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-02T02:00:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-02T02:00:31.000Z"}]]},"readingTime":{"minutes":1.27,"words":380},"git":{"createdTime":1738461631000,"updatedTime":1738461631000,"contributors":[{"name":"QiHuang02","username":"QiHuang02","email":"2830447227@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/QiHuang02?v=4","url":"https://github.com/QiHuang02"}],"changelog":[{"hash":"2e1940862347b6751daf44ab27e3fd41e964e469","time":1738461631000,"email":"2830447227@qq.com","author":"QiHuang02","message":"更新vuepress-theme-plume至1.0.0-rc.129，迁移旧文档至新版本"}]},"autoDesc":true,"filePathRelative":"notes/minecraft/misc/Resource_location.md","headers":[]}');export{s as comp,p as data};
