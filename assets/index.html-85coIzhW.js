import{_ as e,c as l,e as d,o as a}from"./app-08d28jb5.js";const n={};function i(s,t){return a(),l("div",null,t[0]||(t[0]=[d(`<h2 id="basic_grammar" tabindex="-1"><a class="header-anchor" href="#basic_grammar"><span>基本语法</span></a></h2><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">StartupEvents</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">registry</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">block</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">create</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre></div><h2 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>方法</span></a></h2><p>这里的<code>event.create(name, type)</code>可以通过链式调用为物品添加更多的属性，这对于魔改来说十分方便。以下是一些可以进行链式调用的函数。</p><details class="hint-container details"><summary>点我查看常用方法</summary><table><thead><tr><th style="text-align:left;"><mark>$BuilderBase&lt;$Block&gt;方法</mark></th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>displayName($Component$$Type)</code></td><td style="text-align:center;">为方块设置名称，当存在lang文件时会被覆盖</td></tr><tr><td style="text-align:left;"><code>tag($ResourceLocation$$Type)</code></td><td style="text-align:center;">为方块添加标签,例如 <code>minecraft:stone</code></td></tr><tr><td style="text-align:left;"><code>translationKey(string)</code></td><td style="text-align:center;">为方块设置翻译键,例如 <code>block.minecraft.stone</code></td></tr><tr><td style="text-align:left;"><mark>$BlockBuilder方法</mark></td><td style="text-align:center;">描述</td></tr><tr><td style="text-align:left;"><code>box(double, double, double, double, double, double, boolean)</code></td><td style="text-align:center;">设置方块的形状</td></tr><tr><td style="text-align:left;"><code>color(integer, $BlockTintFunction$$Type)</code></td><td style="text-align:center;">通过索引为方块上色,用于有多层纹理的情况</td></tr><tr><td style="text-align:left;"><code>color($BlockTintFunction$$Type)</code></td><td style="text-align:center;">通过索引为方块上色</td></tr><tr><td style="text-align:left;"><code>item($Consumer$$Type&lt;($ItemBuilder)&gt;)</code></td><td style="text-align:center;">修改方块的物品表示形式</td></tr><tr><td style="text-align:left;"><code>fullBlock(boolean)</code></td><td style="text-align:center;">设置方块是否应该是一个完整的块，类似于仙人掌或门</td></tr><tr><td style="text-align:left;"><code>noItem()</code></td><td style="text-align:center;">设置该方块没有对应的物品</td></tr><tr><td style="text-align:left;"><code>noDrops()</code></td><td style="text-align:center;">设置该方块没有掉落物</td></tr><tr><td style="text-align:left;"><code>tagBlock(($ResourceLocation$$Type)[])</code></td><td style="text-align:center;">设置方块的标签</td></tr><tr><td style="text-align:left;"><code>hardness(float)</code></td><td style="text-align:center;">设置方块硬度。默认值为 1.5。将此值设置为-1 将使方块不可破坏，如同基岩</td></tr><tr><td style="text-align:left;"><code>tagItem(($ResourceLocation$$Type)[])</code></td><td style="text-align:center;">设置方块对应物品（<code>blockitem</code>）的标签</td></tr><tr><td style="text-align:left;"><code>exploded($Consumer$$Type&lt;($BlockExplodedCallbackJS)&gt;)</code></td><td style="text-align:center;">设置此方块在爆炸后的反应。注意，此时方块已经被摧毁</td></tr><tr><td style="text-align:left;"><code>notSolid()</code></td><td style="text-align:center;">设置方块不为固体</td></tr><tr><td style="text-align:left;"><code>steppedOn($Consumer$$Type&lt;($EntitySteppedOnBlockCallbackJS)&gt;)</code></td><td style="text-align:center;">设置当实体踩到方块时发生的事情</td></tr><tr><td style="text-align:left;"><code>fallenOn($Consumer$$Type&lt;($EntityFallenOnBlockCallbackJS)&gt;)</code></td><td style="text-align:center;">设置当实体掉落在方块上时发生的事情</td></tr><tr><td style="text-align:left;"><code>bounciness(float)</code></td><td style="text-align:center;">实体落在该方块上时，会根据其弹跳性乘以下落速度进行弹跳。不要将弹跳性设置为负值，因为这会导致实体掉入虚空！</td></tr><tr><td style="text-align:left;"><code>tagBoth(($ResourceLocation$$Type)[])</code></td><td style="text-align:center;">同时设置该方块和该方块对应的物品的标签</td></tr><tr><td style="text-align:left;"><code>lightLevel(float)</code></td><td style="text-align:center;">设置方块的发光等级，默认为0（不发光）</td></tr><tr><td style="text-align:left;"><code>jumpFactor(float)</code></td><td style="text-align:center;">设置实体在方块上能跳多高的高度</td></tr><tr><td style="text-align:left;"><code>drops($BlockDropSupplier$$Type)</code></td><td style="text-align:center;">改变方块的掉落物</td></tr><tr><td style="text-align:left;"><code>soundType($SoundType$$Type)</code></td><td style="text-align:center;">设置方块的声音，默认为木头</td></tr><tr><td style="text-align:left;"><code>randomTick($Consumer$$Type&lt;($RandomTickCallbackJS)&gt;)</code></td><td style="text-align:center;">设置方块的随机tick回调</td></tr><tr><td style="text-align:left;"><code>rightClick($Consumer$$Type&lt;($BlockRightClickedKubeEvent)&gt;)</code></td><td style="text-align:center;">设置方块的鼠标右键回调</td></tr><tr><td style="text-align:left;"><code>blockEntity($Consumer$$Type&lt;($BlockEntityInfo)&gt;)</code></td><td style="text-align:center;">为该方块创建方块实体</td></tr><tr><td style="text-align:left;"><code>noCollision()</code></td><td style="text-align:center;">使该方块不与实体碰撞</td></tr><tr><td style="text-align:left;"><code>transparent(boolean)</code></td><td style="text-align:center;">使方块透明</td></tr><tr><td style="text-align:left;"><code>resistance(float)</code></td><td style="text-align:center;">设置方块的抗爆强度。默认值为3</td></tr><tr><td style="text-align:left;"><code>canBeReplaced($Predicate$$Type&lt;($CanBeReplacedCallbackJS)&gt;)</code></td><td style="text-align:center;">设置是否可以将该方块替换为其他东西</td></tr><tr><td style="text-align:left;"><code>opaque(boolean)</code></td><td style="text-align:center;">设置方块为不透明。不透明方块不允许光线穿透</td></tr><tr><td style="text-align:left;"><code>renderType($BlockRenderType$$Type)</code></td><td style="text-align:center;">设置块的渲染类型。可以是 <code>cutout</code>、<code>cutout_mipped</code>、<code>translucent</code> 或 <code>solid</code></td></tr><tr><td style="text-align:left;"><code>requiresTool()</code></td><td style="text-align:center;">设置方块需要对应的工具挖掘才会掉落</td></tr></tbody></table></details><h2 id="parameter" tabindex="-1"><a class="header-anchor" href="#parameter"><span>参数解释</span></a></h2><p><code>name</code> 方块的id</p><p><code>type</code> 方块的类型</p><details class="hint-container details"><summary>点我查看更多</summary><table><thead><tr><th style="text-align:center;">type</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">detector</td><td style="text-align:center;">侦测器</td></tr><tr><td style="text-align:center;">slab</td><td style="text-align:center;">台阶</td></tr><tr><td style="text-align:center;">stairs</td><td style="text-align:center;">楼梯</td></tr><tr><td style="text-align:center;">fence</td><td style="text-align:center;">栅栏</td></tr><tr><td style="text-align:center;">wall</td><td style="text-align:center;">墙</td></tr><tr><td style="text-align:center;">fence_gate</td><td style="text-align:center;">栅栏门</td></tr><tr><td style="text-align:center;">pressure_plate</td><td style="text-align:center;">压力板</td></tr><tr><td style="text-align:center;">button</td><td style="text-align:center;">按钮</td></tr><tr><td style="text-align:center;">falling</td><td style="text-align:center;">重力方块</td></tr><tr><td style="text-align:center;">crop</td><td style="text-align:center;">作物</td></tr><tr><td style="text-align:center;">cardinal</td><td style="text-align:center;">朝向方块</td></tr><tr><td style="text-align:center;">carpet</td><td style="text-align:center;">地毯</td></tr><tr><td style="text-align:center;">door</td><td style="text-align:center;">门</td></tr><tr><td style="text-align:center;">trapdoor</td><td style="text-align:center;">活板门</td></tr></tbody></table></details>`,9)]))}const c=e(n,[["render",i]]),o=JSON.parse('{"path":"/notes/minecraft/kubejs/basic/registry/block/","title":"方块注册","lang":"zh-CN","frontmatter":{"title":"方块注册","createTime":"2024/10/03 23:01:02","permalink":"/notes/minecraft/kubejs/basic/registry/block/","description":"基本语法 方法 这里的event.create(name, type)可以通过链式调用为物品添加更多的属性，这对于魔改来说十分方便。以下是一些可以进行链式调用的函数。 点我查看常用方法 参数解释 name 方块的id type 方块的类型 点我查看更多","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"方块注册\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-02T02:00:31.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://qihuang02.cn/notes/minecraft/kubejs/basic/registry/block/"}],["meta",{"property":"og:site_name","content":"QiHuang02的笔记本"}],["meta",{"property":"og:title","content":"方块注册"}],["meta",{"property":"og:description","content":"基本语法 方法 这里的event.create(name, type)可以通过链式调用为物品添加更多的属性，这对于魔改来说十分方便。以下是一些可以进行链式调用的函数。 点我查看常用方法 参数解释 name 方块的id type 方块的类型 点我查看更多"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-02T02:00:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-02T02:00:31.000Z"}]]},"readingTime":{"minutes":2.53,"words":758},"git":{"createdTime":1738461631000,"updatedTime":1738461631000,"contributors":[{"name":"QiHuang02","username":"QiHuang02","email":"2830447227@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/QiHuang02?v=4","url":"https://github.com/QiHuang02"}],"changelog":[{"hash":"2e1940862347b6751daf44ab27e3fd41e964e469","time":1738461631000,"email":"2830447227@qq.com","author":"QiHuang02","message":"更新vuepress-theme-plume至1.0.0-rc.129，迁移旧文档至新版本"}]},"autoDesc":true,"filePathRelative":"notes/minecraft/kubejs/basic/registry/Block.md","headers":[]}');export{c as comp,o as data};
